#-----------------#
# ZSH source file #
#-----------------#
# https://github.com/jleclanche/dotfiles/blob/master/.zshrc
# https://github.com/MrElendig/dotfiles-alice/blob/master/.zshrc
# https://github.com/slashbeast/things/blob/master/configs/DOTzshrc


#--[ Enable colors ]--
autoload -U colors && colors


#--[ Load modules ]--
autoload -Uz run-help zmv


#--[Shell Options ]--
# name of directory will cd to it
setopt auto_cd
setopt appendhistory
setopt hist_verify
setopt hist_fcntl_lock
setopt hist_save_no_dups
setopt histignorealldups
setopt promptsubst
# disable ctrl-d closing the terminal
setopt IGNORE_EOF

# History
HISTSIZE=10000
SAVEHIST=10000
HISTFILE="$XDG_CACHE_HOME/shell_history"
mkdir -p "$HISTFILE:h"
bindkey -M isearch . self-insert # history search fix

#--[ Export variables that should have already been exported...Shame on me ]--
export LC_ALL="en_US.UTF-8"
if [[ -z "$XDG_DATA_HOME" ]]; then
   export XDG_DATA_HOME="$HOME/.local/share"
fi
if [[ -z "$XDG_CONFIG_HOME" ]]; then
   export XDG_CONFIG_HOME="$HOME/.config"
fi
if [[ -z "$XDG_CACHE_HOME" ]]; then
   export XDG_CACHE_HOME="$HOME/.cache"
fi
if [[ -z "$XDG_DATA_DIRS" ]]; then
   export XDG_DATA_DIRS="/usr/local/share:/usr/share"
fi
if [[ -z "$XDG_CONFIG_DIRS" ]]; then
   export XDG_CONFIG_DIRS="/etc/xdg"
else
   export XDG_CONFIG_DIRS="/etc/xdg:$XDG_CONFIG_DIRS"
fi
if ! [[ "${PATH}" =~ "^${HOME}/bin" ]]; then
    export PATH="${HOME}/bin:${PATH}"
fi
# Not all servers have terminfo for rxvt-256color. :<
if [ "${TERM}" = 'rxvt-256color' ] && ! [ -f '/usr/share/terminfo/r/rxvt-256color' ] && ! [ -f '/lib/terminfo/r/rxvt-256color' ] && ! [ -f "${HOME}/.terminfo/r/rxvt-256color" ]; then
    export TERM='rxvt-unicode'
fi


#--[ fzf ]--
if [[ -e "$HOME/.fzf.zsh" ]]; then
   . "$HOME/.fzf.zsh"
else
   source "$XDG_CONFIG_HOME/zsh/fzf/completion.zsh"
   source "$XDG_CONFIG_HOME/zsh/fzf/key-bindings.zsh"
fi
#- fzf fuzzy completion
export fzf_default_completion="expand-or-complete-prefix"
#- 'literal trigger' & fzf-completion keybind to start fuzzy completion
export FZF_COMPLETION_TRIGGER='//'


#--[ z ]--
export _Z_DATA="$XDG_CACHE_HOME/z"


#--[ Source other important files ]--
source "$XDG_CONFIG_HOME/zsh/zsh_prompt.zsh"
source "$XDG_CONFIG_HOME/zsh/zsh_functions.zsh"
source "$XDG_CONFIG_HOME/zsh/host_specific/$(hostname).zsh" 
# Source $XDG_CONFIG_HOME/profile/*
# I keep my aliases and generic functions in there.
if [[ -d "$XDG_CONFIG_HOME/profile.d" ]]; then
   for f in $XDG_CONFIG_HOME/profile.d/*; do
      . "$f"
   done
fi


#--[ dirstack ]--
#- Handle DIRSTACK to have a buffer of last visited directories
DIRSTACKFILE="$HOME/.cache/zsh/dirs"
if [[ -f $DIRSTACKFILE ]] && [[ $#dirstack -eq 0 ]]; then
   dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
   #[[ -d $dirstack[1] ]] && cd $dirstack[1]
fi
chpwd() {
   print -l $PWD ${(u)dirstack} >$DIRSTACKFILE
}
DIRSTACKSIZE=50

setopt autopushd pushdsilent pushdtohome pushdignoredups


#--[ Completion System ]--
# add ~/.config/zsh/completion to completion paths
# NOTE: this needs to be a directory with 0755 permissions, 
# otherwise you will get "insecure" warnings on shell load!
fpath=("$XDG_CONFIG_HOME/zsh/completion" $fpath)
# set autocomplete for aliases
setopt completealiases
# Load
autoload -Uz compinit
compinit
# Definitions
zstyle ':completion:*:(ssh|scp|sftp|rsync):*' hosts "${(z@)${${(f@)$(<${HOME}/.ssh/known_hosts)}%%\ *}%%,*}"
zstyle ":completion:*" auto-description "specify: %d"
zstyle ":completion:*" completer _expand _complete _correct _approximate
zstyle ":completion:*" format "Completing %d"
zstyle ":completion:*" group-name ""
zstyle ":completion:*" menu select=2
zstyle ":completion:*:default" list-colors ${(s.:.)LS_COLORS}
zstyle ":completion:*" list-colors ""
zstyle ":completion:*" list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ":completion:*" matcher-list "" "m:{a-z}={A-Z}" "m:{a-zA-Z}={A-Za-z}" "r:|[._-]=* r:|=* l:|=*"
zstyle ":completion:*" menu select=long
zstyle ":completion:*" select-prompt %SScrolling active: current selection at %p%s
zstyle ":completion:*" verbose true
# > `kill <tab>` will open fzf with processes to kill.
zstyle ":completion:*:*:kill:*:processes" list-colors "=(#b) #([0-9]#)*=0=01;31"
zstyle ":completion:*:kill:*" command "ps -u $USER -o pid,%cpu,tty,cputime,cmd"
#- complete 'cd -<tab>' with menu
zstyle ':completion:*:*:cd:*:directory-stack' menu yes select


#--[ Bindings ]--
#- Run cdlast, which shows last opened directories in fzf an cds to selection
zle -N cdlast
bindkey '^L' cdlast
#- Set Vi key mode
bindkey -v
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
# bindkey '^r' history-incremental-search-backward # let fzf handle this
bindkey '^u' backward-kill-line
bindkey '^k' kill-line
bindkey '^[[3~' delete-char
# bind editing command in vim to ctrl-e
autoload edit-command-line
zle -N edit-command-line
bindkey "^e" edit-command-line


#--[ tty config ]--
if [ "$TERM" = "linux" ]; then
    echo -en "\e]P0191a1d" #black
    echo -en "\e]P1f3b2ab" #red
    echo -en "\e]P2bad260" #green
    echo -en "\e]P3eac58d" #yellow
    echo -en "\e]P4c6e5f8" #blue
    echo -en "\e]P5e4c6ed" #magenta
    echo -en "\e]P6c6f3e6" #cyan
    echo -en "\e]P7ece3d0" #white
    #echo -en "\e]P7333841" #darkgrey

    echo -en "\e]P85a6373" #lightgrey
    echo -en "\e]P9ea4439" #darkred
    echo -en "\e]PA50763d" #darkgreen
    echo -en "\e]PBfab81d" #brown
    echo -en "\e]PC446fa6" #darkblue
    echo -en "\e]PD84678f" #darkmagenta
    echo -en "\e]PE4f7b6c" #darkcyan

    echo -en "\e]PFece3d0" #white
    clear #for background artifacting
fi


#--[ Window Title ]--

case $TERM in
termite|*xterm*|rxvt|rxvt-unicode|rxvt-256color|rxvt-unicode-256color|(dt|k|E)term|st*)
    precmd () {
      vcs_info
      print -Pn "\e]0;[%n@%M][%~]%#\a"
    } 
    preexec () { print -Pn "\e]0;[%n@%M][%~]%# ($1)\a" }
    ;;
  screen|screen-256color)
    precmd () { 
      vcs_info
      print -Pn "\e]83;title \"$1\"\a" 
      print -Pn "\e]0;$TERM - (%L) [%n@%M]%# [%~]\a" 
    }
    preexec () { 
      print -Pn "\e]83;title \"$1\"\a" 
      print -Pn "\e]0;$TERM - (%L) [%n@%M]%# [%~] ($1)\a" 
    }
    ;; 
esac


compdef "_files -W $HOME/syncthing/smalldocs/quicknotes/ -/" n
compdef "_files -W $HOME/syncthing/smalldocs/quicknotes/ -/" nrm
compdef "_files -W $HOME/syncthing/smalldocs/quicknotes/ -/" nmv

#--[ Deprecated ... Delete? ]--
## Make sure the terminal is in application mode, when zle is
## active. Only then are the values from $terminfo valid.
#if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
#   function zle-line-init {
#      printf "%s" ${terminfo[smkx]}
#   }
#   function zle-line-finish {
#      printf "%s" ${terminfo[rmkx]}
#   }
#   zle -N zle-line-init
#   zle -N zle-line-finish
#fi
## Handle DIRSTACK to have a buffer of last visited directories
#DIRSTACKFILE="$HOME/.cache/zsh/dirs"
#if [[ -f $DIRSTACKFILE ]] && [[ $#dirstack -eq 0 ]]; then
#   dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
#   [[ -d $dirstack[1] ]] && cd $dirstack[1]
#fi
#chpwd() {
#   print -l $PWD ${(u)dirstack} >$DIRSTACKFILE
#}
#
#DIRSTACKSIZE=50

#EOF
