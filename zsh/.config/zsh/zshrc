#!/bin/zsh
#
# Heavily inspired by jleclanche's
# see https://github.com/jleclanche/dotfiles/blob/master/.zshrc

###############
# Enable colors
###############

autoload -U colors && colors

########
# Locale
########

export LC_ALL="en_US.UTF-8"

#########################
# Environmental Variables
########################

#sedir defaults, in case they're not already set up.
# http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
if [[ -z "$XDG_DATA_HOME" ]]; then
   export XDG_DATA_HOME="$HOME/.local/share"
fi

if [[ -z "$XDG_CONFIG_HOME" ]]; then
   export XDG_CONFIG_HOME="$HOME/.config"
fi

if [[ -z "$XDG_CACHE_HOME" ]]; then
   export XDG_CACHE_HOME="$HOME/.cache"
fi

if [[ -z "$XDG_DATA_DIRS" ]]; then
	export XDG_DATA_DIRS="/usr/local/share:/usr/share"
fi
# 
if [[ -z "$XDG_CONFIG_DIRS" ]]; then
	export XDG_CONFIG_DIRS="/etc/xdg"
else
	export XDG_CONFIG_DIRS="/etc/xdg:$XDG_CONFIG_DIRS"
fi

#################################
# Source other importan zsh files 
#################################

source "$XDG_CONFIG_HOME/zsh/zsh_aliases"
source "$XDG_CONFIG_HOME/zsh/zsh_functions"
source "$XDG_CONFIG_HOME/zsh/zsh_prompt"
source "$XDG_CONFIG_HOME/zsh/host_specific/$(hostname).zsh" 
source "$XDG_CONFIG_HOME/zsh/fzf/completion.zsh"

# Colored man pages
# Colored manpages


#################################
# Custom bindings
#################################

# run cdlast, which shows last opened directories in fzf an cds to selection
zle -N cdlast
bindkey '^L' cdlast

#################
# Set Vi key mode
#################
bindkey -v
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
#bindkey '^r' history-incremental-search-backward
bindkey '^u' backward-kill-line
bindkey '^k' kill-line

bindkey '^[[3~' delete-char

# Make ctrl-e edit the current command line
autoload edit-command-line
zle -N edit-command-line
bindkey "^e" edit-command-line

source "$XDG_CONFIG_HOME/zsh/fzf/key-bindings.zsh"
# FZF fuzzy completion
export fzf_default_completion="expand-or-complete-prefix"
# 'literal trigger' & fzf-completion keybind to start fuzzy completion
export FZF_COMPLETION_TRIGGER='//'
# export FZF_COMPLETION_TRIGGER='**'

# Make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
   function zle-line-init {
      printf "%s" ${terminfo[smkx]}
   }
   function zle-line-finish {
      printf "%s" ${terminfo[rmkx]}
   }
   zle -N zle-line-init
   zle -N zle-line-finish
fi

bindkey -M isearch . self-insert # history search fix

##################
# General Settings
##################
# add ~/bin to $PATH
#path=(~/bin $path)
#path=(~/gitland/scripts $path)
#export PATH
#-----------------
# add ~/.config/zsh/completion to completion paths
# NOTE: this needs to be a directory with 0755 permissions, 
# otherwise you will get "insecure" warnings on shell load!
fpath=("$XDG_CONFIG_HOME/zsh/completion" $fpath)
# set autocomplete for aliases
setopt completealiases
#-----------------
# Keep 1000 lines of history within the shell and save it 
# to ~/.cache/shell_history
HISTSIZE=10000
SAVEHIST=10000
HISTFILE="$XDG_CACHE_HOME/shell_history"
#-----------------
# Shell Options
#setopt autocd # assume "cd" when a command is a directory
setopt histignorealldups # Substitute commands in the prompt
#setopt sharehistory # Share the same history between all shells
setopt promptsubst # required for the git plugin
#-----------------

# Other Modules
autoload -Uz run-help zmv
# Other Shell Options
setopt auto_cd \
       appendhistory \
       hist_verify \
       hist_fcntl_lock \
       hist_save_no_dups


# Completion System
autoload -Uz compinit
compinit
zstyle ':completion:*:(ssh|scp|sftp|rsync):*' hosts "${(z@)${${(f@)$(<${HOME}/.ssh/known_hosts)}%%\ *}%%,*}"
zstyle ":completion:*" auto-description "specify: %d"
zstyle ":completion:*" completer _expand _complete _correct _approximate
zstyle ":completion:*" format "Completing %d"
zstyle ":completion:*" group-name ""
zstyle ":completion:*" menu select=2
zstyle ":completion:*:default" list-colors ${(s.:.)LS_COLORS}
zstyle ":completion:*" list-colors ""
zstyle ":completion:*" list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ":completion:*" matcher-list "" "m:{a-z}={A-Z}" "m:{a-zA-Z}={A-Za-z}" "r:|[._-]=* r:|=* l:|=*"
zstyle ":completion:*" menu select=long
zstyle ":completion:*" select-prompt %SScrolling active: current selection at %p%s
zstyle ":completion:*" verbose true

zstyle ":completion:*:*:kill:*:processes" list-colors "=(#b) #([0-9]#)*=0=01;31"
zstyle ":completion:*:kill:*" command "ps -u $USER -o pid,%cpu,tty,cputime,cmd"

# complete 'cd -<tab>' with menu
zstyle ':completion:*:*:cd:*:directory-stack' menu yes select
#-----------------


############
# Extra SHIT
############

##############################################################
# Handle DIRSTACK to have a buffer of last visited directories
##############################################################

DIRSTACKFILE="$HOME/.cache/zsh/dirs"
if [[ -f $DIRSTACKFILE ]] && [[ $#dirstack -eq 0 ]]; then
   dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
   [[ -d $dirstack[1] ]] && cd $dirstack[1]
fi
chpwd() {
   print -l $PWD ${(u)dirstack} >$DIRSTACKFILE
}

DIRSTACKSIZE=50

setopt autopushd pushdsilent pushdtohome

## Remove duplicate entries
#setopt pushdignoredups
#
### This reverts the +/- operators.
#setopt pushdminus
#

# Syntax highlighting plugin
if [[ -e /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]]; then
	source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# virtualenvwrapper support
# Remember to set $PROJECT_HOME in your profile file!
if command -V virtualenvwrapper_lazy.sh >/dev/null 2>&1; then
	export WORKON_HOME="$XDG_DATA_HOME/virtualenvs"
	source virtualenvwrapper_lazy.sh
	# Arch linux uses python3 by default, this is required to make python2-compatible projects
	alias mkproject2="mkproject -p /usr/bin/python2"
	alias mkvirtualenv2="mkvirtualenv -p /usr/bin/python2"
fi

# User profile
if [[ -e "$XDG_CONFIG_HOME/zsh/profile" ]]; then
	source "$XDG_CONFIG_HOME/zsh/profile"
fi

# Check if $LANG is badly set as it causes issues
# if [[ $LANG == "C"  || $LANG == "" ]]; then
# 	>&2 echo "$fg[red]The \$LANG variable is not set. This can cause a lot of problems.$reset_color"
# fi

if [ "$TERM" = "linux" ]; then
    echo -en "\e]P0191a1d" #black
    echo -en "\e]P1f3b2ab" #red
    echo -en "\e]P2bad260" #green
    echo -en "\e]P3eac58d" #yellow
    echo -en "\e]P4c6e5f8" #blue
    echo -en "\e]P5e4c6ed" #magenta
    echo -en "\e]P6c6f3e6" #cyan
    echo -en "\e]P7333841" #darkgrey

    echo -en "\e]P85a6373" #lightgrey
    echo -en "\e]P9ea4439" #darkred
    echo -en "\e]PA50763d" #darkgreen
    echo -en "\e]PBfab81d" #brown
    echo -en "\e]PC446fa6" #darkblue
    echo -en "\e]PD84678f" #darkmagenta
    echo -en "\e]PE4f7b6c" #darkcyan

    echo -en "\e]PFece3d0" #white
    clear #for background artifacting
fi


#EOF
